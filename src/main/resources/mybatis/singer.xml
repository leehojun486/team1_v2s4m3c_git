<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 

<mapper namespace="dev.mvc.singer.SingerDAOInter"> 

  <insert id="create" parameterType="SingerVO">
    INSERT INTO singer(singerno, name, sex, country, intro, portrait, thumb1, size1, singerrec, genre)
    VALUES(singer_seq.nextval, #{name}, #{sex}, #{country}, #{intro}, #{portrait}, #{thumb1}, #{size1}, #{singerrec}, #{genre})
  </insert>
  
   <select id="list_singerno_asc" resultType="SingerVO">
    SELECT singerno, name, sex, country, intro, portrait, thumb1, size1, singerrec, genre
    FROM singer
    ORDER BY singerno DESC
  </select>
  
  <select id="read" resultType="SingerVO">
    SELECT singerno, name, sex, country, intro, portrait, thumb1, size1, singerrec, genre
    FROM singer
    WHERE singerno = #{singerno}
  </select>
  
  <update id="update" parameterType="SingerVO">
   UPDATE singer
   SET name=#{name}, sex=#{sex}, country=#{country}, intro=#{intro}, genre=#{genre}
   WHERE  singerno=#{singerno}
  </update>
  
  <!-- 첨부 파일 메인 이미지 변경 -->
  <update id="update_img"  parameterType="SingerVO">
    UPDATE singer
    SET portrait=#{portrait}, thumb1=#{thumb1}, size1=#{size1}
    WHERE singerno=#{singerno}
  </update>
  
   <delete id="delete" parameterType="int">
    DELETE FROM singer
    WHERE singerno=#{singerno}
  </delete>
  
  <update id="update_singerrec_down" parameterType="int">
    UPDATE singer
    SET singerrec=singerrec-1
    WHERE singerno=#{singerno}
  </update>

  <update id="update_singerrec_up" parameterType="int">
    UPDATE singer
    SET singerrec=singerrec+1
    WHERE singerno=#{singerno}
  </update>
  
  <!-- singer 와 singer_review 테이블간의 조인(list) -->
  <select id="read_join" resultType="Singer_Singer_Review_join" parameterType="int">
    SELECT s.singerno,
                r.singerno as r_singerno, r.reviewno, r.memberno, r.reviewcon, r.reviewrec, r.reviewdate, r.reviewcmtcnt
    FROM singer s, singer_review r
    WHERE (s.singerno = r.singerno) AND r.singerno=#{singerno}
    ORDER BY s.singerno ASC, r.reviewrec DESC
  </select>
  
  <!-- singer_review 와 member 테이블간의 조인(memberlist) -->
  <select id="read_member_join" resultType="Singer_Review_Member_join" parameterType="int">
    SELECT r.memberno, r.singerno, r.reviewrec,
                m.memberno as m_memberno, m.memberid, m.memberpreview
    FROM singer_review r, member m
    WHERE (r.memberno = m.memberno) AND r.singerno=#{singerno}
    ORDER BY r.reviewrec DESC
  </select>
  
  <!-- 답글수 하향, id: update_reviewrec_down, 입력: reviewno, 리턴: int
  <update id="update_reviewcmtcnt_down" parameterType="int">
    UPDATE review
    SET reviewcmtcnt=reviewcmtcnt-1
    WHERE reviewno=#{reviewno}
  </update>
  
  답글수 상향, id: update_reviewrec_up, 입력: reviewno, 리턴: int
  <update id="update_reviewcmtcnt_up" parameterType="int">
    UPDATE review
    SET reviewcmtcnt=reviewcmtcnt+1
    WHERE reviewno=#{reviewno}
  </update> -->
  
  

</mapper>